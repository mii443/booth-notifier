CREATE TABLE fetch_runs (
  id           bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  fetched_at   timestamptz NOT NULL DEFAULT now(),
  item_ids     bigint[] NOT NULL
);

CREATE INDEX idx_fetch_runs_fetched_at ON fetch_runs (fetched_at);
CREATE INDEX idx_fetch_runs_item_ids_gin ON fetch_runs USING GIN (item_ids);

CREATE TABLE item_snapshots (
  id           bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  fetched_at   timestamptz NOT NULL DEFAULT now(),
  item_id      bigint NOT NULL,
  name         text NOT NULL,
  payload      jsonb NOT NULL,

  CONSTRAINT uq_item_snapshot UNIQUE (item_id, fetched_at),
  CONSTRAINT chk_payload_object CHECK (jsonb_typeof(payload) = 'object')
);

CREATE INDEX idx_item_snapshots_item_id ON item_snapshots (item_id);
CREATE INDEX idx_item_snapshots_fetched_at ON item_snapshots (fetched_at);

CREATE INDEX idx_item_snapshots_payload_gin ON item_snapshots USING GIN (payload jsonb_path_ops);

CREATE TABLE discord_guilds (
	guild_id	bigint PRIMARY KEY,
	name		text NOT NULL,
	created_at	timestamptz NOT NULL DEFAULT now()
);

CREATE TABLE notification_filters (
	id			bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	rule_yaml	text NOT NULL,
	created_at	timestamptz NOT NULL DEFAULT now()
);

CREATE TABLE discord_channels (
	channel_id	bigint PRIMARY KEY,
	guild_id	bigint NOT NULL REFERENCES discord_guilds(guild_id) ON DELETE CASCADE,
	name		text NOT NULL,
	created_at	timestamptz NOT NULL DEFAULT now(),
	filter_id	bigint REFERENCES notification_filters(id) ON DELETE SET NULL
);

CREATE INDEX idx_discord_channels_guild_id ON discord_channels (guild_id);
CREATE INDEX idx_discord_channels_filter_id ON discord_channels (filter_id);

